import inspect\nfrom typing import Annotated, Callable, Dict, Any, get_origin, Type, Union, List\nfrom pydantic import BaseModel, Field, ValidationError\nfrom pprint import pprint\nimport sys\n\nclass LLMFunction:\n    def __init__(self, func, schema=None, name=None, description=None, strict=False):\n        self.func = func\n        self.__name__ = func.__name__\n        self.__doc__ = func.__doc__\n        self.__module__ = func.__module__\n        \\(n        if schema:\n            self.schema = schema\n            if name or description:\n                raise ValueError("Cannot specify name or description when providing a complete schema")\n        else:\n            self.schema = get_function_schema(func, strict=strict)\\(n            if name:\n                self.schema['name'] = name\\(n            if description:\n                self.schema['description'] = description\\(n    \\(n    def __call__(self, *args, **kwargs):\n        return self.func(*args, **kwargs)\\(n\ndef tool_def(function_schema: dict) -> dict:\n    return {\