import inspect\nfrom typing import Annotated, Callable, Dict, Any, get_origin, Type, Union\nfrom typing_extensions import TypeGuard\nimport copy\nimport pydantic as pd\nfrom pydantic import BaseModel\nfrom pydantic_core import PydanticUndefined\nfrom pprint import pprint\nimport sys\n\nclass LLMFunction:\n    def __init__(self, func: Callable, schema: dict = None, name: str = None, description: str = None, strict: bool = False):\n        self.func = func\n        self.name = name if name else func.__name__\n        self.description = description if description else func.__doc__\n        self.__module__ = func.__module__\n        if schema:\n            self.schema = schema\n            if name or description:\n                raise ValueError(\